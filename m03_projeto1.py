# -*- coding: utf-8 -*-
"""M03-Projeto1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1opXq_Zfj_bTr1-idrYfEwZ7_hVwZBO_n
"""

conta =[]

def criar_conta():
  verificador_conta_existe = False
  dados_nova_conta = {}
  dados_nova_conta['numero_conta'] = input("Digite o numero da nova conta:\n>>>")

  for conta_em_consulta in conta:
    if conta_em_consulta['numero_conta'] == dados_nova_conta['numero_conta']:
      verificador_conta_existe = True
      break


  if verificador_conta_existe == True:
    print('\nO numero da conta ja existe. Tente novamente.')

  else:
    dados_nova_conta['saldo_conta'] = float(input('Digite o saldo da nova conta:\n>>>'))
    conta.append(dados_nova_conta)
    print('\nOperacao efetuada com sucesso.')

def remover_conta():
  numero_conta = input('Digite o numero da conta para remover:\n>>>')
  conta_encontrada = False
  for conta_em_consulta in conta:
    if conta_em_consulta['numero_conta'] == numero_conta:
       conta_encontrada = True
       conta.remove(conta_em_consulta)
       print('\nOperacao efetuada com sucesso.')
       break
    if not conta_encontrada:
      print('\nOnumeroda conta nao existe. Tente novamente.')

def listar_contas():
  if len(conta) == 0:
    print('\nNão há contas cadastradas.')
  else:
    index =1
    for conta_em_consulta in conta:
      if conta_em_consulta['saldo_conta'] >= 0:
        status = 'Positivo'
      else:
        status = 'Negativo'
      # format string - f string
      print("f{index} - Numero da conta:{conta_em_consulta['numero_conta']} | Saldo da conta: R$ {conta_em_consulta['saldo_conta']:.2f}({status})")

      index += 1

def adicionar_saldo_em_conta():
  numero_conta = input('Digite o numero da conta:\n>>>')
  for conta_em_consulta in conta:
    if conta_em_consulta['numero_conta'] ==numero_conta:
     valor_creditado = float( input('Digite o valor do credito:\n>>>R$'))
     if valor_credito < 0:
        print('\nValores negativos nao sao aceitos. Tente novamente.')
        return
     else:
      conta_em_consulta['saldo_conta'] += valor_credito
      print('\nOperacao efetuada com sucesso.')
      return

  print('\nO numero da conta nao foi encontrada. Tente novamente.')

def remover_saldo_em_conta():
  numero_conta = input('Digite o numero da conta:\n>>>')
  for conta_em_consulta in conta:
    if conta_em_consulta['numero_conta'] ==numero_conta:
     valor_debito = float( input('Digite o valor do debito:\n>>>R$'))
     if valor_debito < 0:
        print('\nValores negativos nao sao aceitos. Tente novamente.')
        return
     else:
      conta_em_consulta['saldo_conta'] -= valor_debito
      print('\nOperacao efetuada com sucesso.')
      return

  print('\nO numero da conta nao foi encontrada. Tente novamente.')

def transferir_saldo_entre_conta():
  conta_partida = input('Digite o numero da sua conta:\n>>>')
  verificador_etapa = 0
  # Procura a primeira conta
  for conta_em_consulta in conta:
    if conta_em_consulta['numero_conta'] == conta_partida:
      verificador_etapa = 1
      conta_destino = input('Digite o numero da conta destino:\n>>>')
      # Verificar se e uma transferencia para a mesma conta
      if conta_destino != conta_partida:
        # Procura a segunda conta
        for conta_destino_em_consulta in conta:
          if conta_destino_em_consulta['numero_conta'] == conta_destino:
            verificador_etapa = 3
            valor_transferencia = float(input('Digite o valor da transferencia:\n>>> R$'))
            # Verifica se o valor e negativo
            if valor_transferencia < 0:
              print('\nNão e possivel transferir um valor negativo.')
              break
           #Verifica se o saldo e suficiente
            elif valor_transferencia > conta_em_consulta['saldo_conta']:
              print('\nNão e possivel transferir um valor maior que o seu saldo.')
              break
            else:
              conta_em_consulta ['saldo_conta'] -= valor_transferencia
              conta_destino_em_consulta['saldo_conta'] += valor_transferencia
              print('\nOperacao efetuada com sucesso.')
              break

        print()
      else:
        verificador_etapa = 3
        break
  if verificador_etapa == 0:
    print('\nA sua conta nao foi encontrada. Tente novamente.')
  elif verificador_etapa ==1:
    print('\nA conta de destino nao foi encontrada. Tente novamente.')
  elif verificador_etapa ==2:
    print('\nNao e possivel transferir dinheiro para a mesma conta.')

def consultar_saldo_de_conta():
  numero_conta = input('Digite o numero da conta para cosultar o saldo:\n>>> ')
  for conta_em_consulta in conta:
    if conta_em_consulta['saldo_conta'] >= 0:
      status = 'Positivo'
    else:
      status = 'Negativo'
    print(f"\nO saldo e R${conta_em_consulta['saldo_conta']:.2f} ({status})")
    return
print('\nO numero da conta nao foi encontrada. Tente novamente.')


print(">>>Bem vindo ao sistema Bancario<<<")


while True:
  print("\n### Menu ###")
  print("0 - Sair")
  print("1 - Criar uma nova conta")
  print("2 - Remover uma conta")
  print("3 - Listar todas contas")
  print("4 - Adicionar saldo (creditar)")
  print("5 - Remover saldo ( debitar)")
  print("6 - Transferir valor entre contas")
  print("7 - Consultar saldo de uma conta")
  numero_operacao = input('Selecione a operacao que deseja realizar:\n>>>')

  if numero_operacao == "0":
    print('\nSistema encerrado.')
    programa_ativo = False
    break

    #Operacao 1 - Criar uma nova conta
  elif numero_operacao == "1":
    criar_conta()


  #Operacao 2 - Remover uma conta
  elif numero_operacao == "2":
   remover_conta()

  #Operacao 3 - Listar todas contas
  elif numero_operacao == "3":
    listar_contas()

  # Operacao 4 - Adicionar saldo:
  elif numero_operacao == "4":
    adicionar_saldo_em_conta()

 # Operacao 5 - Remover saldo
  elif numero_operacao == '5':
    remover_saldo_em_conta()

 # Operacao 6 - transferir valor entre contas
  elif numero_operacao == "6":
    transferir_saldo_entre_conta()

# Operacao 7 - consultar saldo de uma conta
  elif numero_operacao =="7":
    consultar_saldo_de_conta()




# Operacao invalida
  else:
    print('\nOperacao invalida')